stage.title = Media Processing

#
# Menu Items
#
menu1 = File
menu11 = Home
menu12 = Preferences
menu121 = Select -> ffmpeg
menu122 = Select -> python
menu123 = Select -> youtube-dl
menu13 = Exit

menu2 = Sources
menu20 = Enter URL
menu21 = YouTube
menu211 = YouTube Direct
menu212 = YouTube by URL
menu22=TubiTv
menu221 = Open TubiTv
menu222 = Open TubiTv URL

menu3 = Download
menu31 = YouTube Live
menu32 = YouTube Video
menu33 = TubiTv Movie

menuUtility = Utility
menuUtility1 = Convert Formats
menuUtility2 = Merge Videos
menuUtility3 = Merge Audio and Video
menuUtility4 = Apply Watermark
menuUtility5 = Split Video or Audio
menuUtility6 = Trim Video or Audio

menuHelp = Help
menuHelp1 = How to Download
menuHelp2 = About Media Processing

menuLanguage= Language
menuLanguage1=English
menuLanguage2=Malayalam (\u0D2E\u0D32\u0D2F\u0D3E\u0D33\u0D02)

#
# Validate
#
exit.title = Really Exit?
exit.content = Are you sure you want to exit the application?

text.rootText.title=Media Processing
text.rootText=Here

text.youtube.dialog.title=YouTube URL
text.youtube.dialog.text=Please enter YouTube URL:

text.download.error=Error Downloading Video
text.download.content=Could not download the URL provided. {0}

text.download.button=Download this Movie/Video

text.tubitv.dialog.title=TubiTV URL
text.tubitv.dialog.text=Please enter TubiTV URL:

text.ffmpeg.null.title = Missing ffmpeg
text.ffmpeg.null.text = The ffmpeg application has not been located.  \
	Use Preference menu item to select ffmpeg first.
text.youtubedl.null.title = Missing youtube-dl
text.youtubedl.null.text = The youtube-dl application has not been located. \
	Use Preference menu item to select youtube-dl first.
	
	
command.run=Running Download Command

#-------------------------------------------------------------------
#  Y O U T U B E - V I D E O - D O W N L O A D
#-------------------------------------------------------------------

#
# YouTube Live Download Specific
#
text.download.ytl.dialog.title=Download YouTube Live
text.download.ytl.url=YouTube Live URL:
text.download.ytl.url.example=https://www.youtube.com/watch?v=JRtgYXeC86Y
text.download.ytl.timeout.example=00:01:00

#
# YouTube Video Download Specific
#
text.download.ytv.dialog.header=Download YouTube Video
text.download.ytv.button.ok=Download YouTube Video
text.download.ytv.button.cancel=Cancel Download
text.download.ytv.url=YouTube Video URL:
text.download.ytv.url.example=https://www.youtube.com/watch?v=2zlqHXFmF3c

#
# TubiTv Video Download Specific
#
text.download.tubi.dialog.header=Download TubiTV Video
text.download.tubi.button.ok=Download TubiTv Video
text.download.tubi.button.cancel=Cancel Download
text.download.tubi.message=Download movies from TubiTv by providing the URL \
	to the actual movie.
text.download.tubi.url=TubiTv URL:
text.download.tubi.url.example=https://tubitv.com/tv-shows/464147/s03_e01_the_loaded_goat

#
# Generic Video Download
#
text.download.generic.dialog.header=Download Video
text.download.generic.button.ok=Download Video
text.download.generic.button.cancel=Cancel Download

#
# Convert Video
#
text.convert.dialog.header=Convert Video/Audio
text.convert.button.ok=Convert Format
text.convert.button.cancel=Cancel Convert
text.convert.message=Convert a given file to a different format.  Choose a video \
	or audio file first.
text.convert.dir.chooser.title=Pick a File to Convert
text.convert.dir.chooser.prompt=Pick a File to Convert
text.convert.to.message=Provide a name for the converted file.  The file extension will \
	define the format of the file.  For instance, if you want to convert to an .avi file \
	then this name should have the .avi extension.  If you want to convert to .wav or .mp3 \
	then use the appropriate file extension.  This file will be created within the same \
	directory as the original file, so make sure to use a different name or the original \
	file will be overwritten.
	
#
# Merge Video
#
text.merge.res=Videos are of same format and resolution

text.download.file.empty.message=Provide a name of the output file or leave it \
	blank and the title will be used to name the file.
	
#
# Merge Audio and Video
#
text.mav.dialog.header=Merge Audio and Video
text.mav.message=Select a video and audio file and merge the two together so that these \
	media files will overlap with each other making them one media file.
text.mav.video.chooser.title=Select a Video File (.mp4, .avi, ...)
text.mav.audio.chooser.title=Select an Audio or Video File (.mp3, .wav, .mp4, .avi ...)

#
# Watermark Video
#
text.wm.dialog.header=Add Watermark to Video
text.wm.message=Select an image as a watermark to place onto a video.
text.wm.video.chooser.title=Select a Video File (.mp4, .avi, ...)
text.wm.image.chooser.title=Select an Image File (.gif, .png, .jpg, ...)
text.wm.pos=Position the watermark within the video file.
text.wm.rb.tl=Top Left
text.wm.rb.tr=Top Right
text.wm.rb.bl=Bottom Left
text.wm.rb.br=Bottom Right
text.wm.rb.center=Center

#
# Split Video or Audio
#
text.split.dialog.header=Split Video or Audio into Two Files
text.split.message=Split a video or an audio file at a given point into two separate \
	files that will be complete on it's own.
text.split.video.chooser.title=Select a video or an audio file (.mp4, .avi, .mp3, .wav, ...)
text.split.video.pos.message=Enter where you would like to split this file. \
	This parameters defines the length of the video in time.  This information \
	can be entered in different formats.  For instance,\n \
	HH:MM:SS[.m...] - Hour, minutes, seconds, and milliseconds. e.g. 02:04:20 = 2 hours, \
	4 minutes, and 20 seconds.  00:00:30 = 30 seconds.\n \
	S+[m...] - S is the number of seconds, with the optional millisecond part m.  \
	For instance, \n 55 = 55 seconds, 200ms = 200 milliseconds, 200000us = 200000 \
	microseconds, yeah, that's just silly.
text.split.position=Position to split:

#
# Trim Video or Audio
#
text.trim.dialog.header=Trim Start/End of Video or Audio File
text.trim.message=Trim a media file (audio or video) with respect to the start point \
	and end point.
text.trim.start.message=Enter the length of the media to skip from the beginning \
	or the end of the file.  	This parameters defines the length of the video in time.  This information \
	can be entered in different formats.  For instance,\n \
	HH:MM:SS[.m...] - Hour, minutes, seconds, and milliseconds. e.g. 02:04:20 = 2 hours, \
	4 minutes, and 20 seconds.  00:00:30 = 30 seconds.\n \
	S+[m...] - S is the number of seconds, with the optional millisecond part m.  \
	For instance, \n 55 = 55 seconds, 200ms = 200 milliseconds, 200000us = 200000 \
	microseconds, yeah, that's just silly.
text.trim.start=Length to skip from beginning (optional):	
text.trim.end=Length to skip from end (optional):


text.download.ffmpeg.logLevel=Log Level:

text.download.dir=Output Directory:
text.download.file=Output File Name:
text.download.timeout=Timeout:

text.download.ffmpeg.title=Run ffmpeg


text.download.output.dir=Output File Directory Location
text.download.output.file=Name of the Output File (e.g. video.mp4)


text.download.yt.message=Enter the URL of the actual YouTube live link.  This should \
	have the form "https://www.youtube.com/watch?v=JRtgYXeC86Y".  This should not not \
	be a link to the channel, but to the actual live video.
text.download.yt.timeout.message=Enter the time duration of the video to be captured. \
This parameters defines the length of the video in time.  This information can be entered \
in different formats.  For instance,\n \
HH:MM:SS[.m...] - Hour, minutes, seconds, and milliseconds. e.g. 02:04:20 = 2 hours, \
4 minutes, and 20 seconds.  00:00:30 = 30 seconds.\n \
S+[m...] - S is the number of seconds, with the optional millisecond part m.  For instance, \n \
55 = 55 seconds, 200ms = 200 milliseconds, 200000us = 200000 microseconds, yeah, that's just silly.

text.convert.output.message=The extension of this file will determine what type of conversion \
	is run against that file.  For instance, if the extension is .mp3, then the file will be \
	converted to an .mp3 file and just the audio will be available.  If the file extension is \
	.mp4, then an mp4 video file will be created.  A file extension of .mkv, .webm, .avi \
	will result in a corresponding file type. 
	
	
text.about.title=About Media Processing
text.about=The Media Processing is an Open Source application that depends on the following.\n\n\
	FFmpeg - https://ffmpeg.org/\n\
	Youtube-dl - https://github.com/ytdl-org/youtube-dl\n\
	Python - https://www.python.org/\n\n\
	Media Processing is created by Sunil Samuel (web_github@sunilsamuel.com) and is maintained on github\n\
	https://github.com/Media-Transform/Media-Processing\n\n\
	Version: 1.0 (June 24, 2020)
	
	
	
window.title=Dynamic language change
button.english=English
button.german=German
label.numSwitches=Number of language switches: {0}
